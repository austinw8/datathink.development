---
title: "Notes: Functions and Control Flow"
author: "Austin Mangelson"
format: html
editor: visual
---

## Control Flow

[General Format:]{.underline}

**if** (condition is true) {\
perform this\
} **else if** (a different condition) {\
do this other thing\
} **else** {\
do this other thing\
}

```{r}

x <- 8

if (x >= 10) {
  print("x is greater than or equal to 10")
} else if (x > 5) {
  print("x is less than 10 but greater than 5")
} else {
  print("x is less than 5")
}


x <- 4 == 3

if (x) {
  "4 equals 3"
} else {
  "4 does not equal 3"
}

```

## Functions

DRY - ***don't repeat yourself** (general rule of thumb is don't copy/paste more than twice)*

[General Format:]{.underline}

name_of_function -\> function(parameters){\
what to do with function\
}

```{r practice with functions}

hi <- function(){
  cat("hello!")
}

#introduce input parameters
hi <- function(name){
  cat("Hello ")
  cat(name)
  cat("!")
}

#glue
hi <- function(name){
  greeting <- glue::glue("Whassup {name}!")
  return(greeting)
}

hi(name = "Austin")
hi(name = "Kelsey")
hi("Monica")


hi <- function(greeting, name, from){
  salutation <- glue::glue("{greeting} {name}! - {from}")
  return(salutation)
}

hi("Howdy", "Delilah", "Austin")
hi(greeting = "Hey there,", name = "Delilah", from = "The Plain White T's")
```

## **Temperatures**

convert Fahrenheit to Kelvin

```{r}

fahr_to_kelvin <- function(temp_f) {
  temp_k <- ((temp_f - 32) * (5/9)) + 273.15
  return(temp_k)
}

fahr_to_kelvin(32)
fahr_to_kelvin(212)
```

convert Kelvinelvin to Celsius

```{r}
kelvin_to_celsius <- function(temp_k) {
  temp_c <- (temp_k - 273.15)
  return(temp_c)
}

kelvin_to_celsius(32)
kelvin_to_celsius(273.15)
```

convert Fahrenheit to Calsius

```{r}
library(tidyverse)

fahr_to_kelvin(32) |> 
  kelvin_to_celsius()


fahr_to_cels <- function(temp_f){
  temp_k <- fahr_to_kelvin(temp_f)
  temp_c <- kelvin_to_celsius(temp_k)
  return(temp_c)
}

fahr_to_cels(45)
fahr_to_cels(92)

```

## **Defensive Programming** 

defend against wrong inputs

```{r}


fahr_to_kelvin <- function(temp_f) {
  if (!is.numeric(temp_f)) {
    stop("temp_f must be numeric\n",
         "you have supplied an object of class: ",
         class(temp_f))
  }
  temp_k <- ((temp_f - 32) * (5/9)) + 273.15
  return(temp_k)
}

fahr_to_cels("hot")
```

## Source Functions

```{r}
source(file = "../functions/temperature_conversion.R"
```
